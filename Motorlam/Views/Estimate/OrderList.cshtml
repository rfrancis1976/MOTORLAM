@using Motorlam.Entities
@model IList<InvoiceLine>

@{           
    string rowClass = string.Empty;
    int cont = 1;
    var invoiceLine = (InvoiceLine) ViewBag.InvoiceLine;
    decimal totalsinIVA = 0;
    decimal totalconIVA = 0;
}
<div id="tabs" class="ui-tabs ui-widget ui-widget-content ui-corner-all">                           
        <div class="tabsContent">           
            <div class="infoAdminContent">
<h2>Lineas Factura</h2>
<table class="Grid evaluationTable" border="0" cellpadding="0" cellspacing="0">
    <thead>
        <tr>
           <th colspan="100" class="nRegisters">
                <div class="fullTableSearchDocs">            
	                 <span class="textNRegister">
                        Lineas Factura
                    </span>
                </div>
            </th>
        </tr>
        <tr> 
            <th>Codigo Producto</th>
            <th>Producto</th>
            <th>Cantidad</th>
            <th>Precio</th>
            <th>Descuento</th>
            <th>Total</th>
            <th class="separator TH52"></th>
        </tr>        
    </thead>
    <tbody>
        
         @foreach (var line in Model)
         {
            rowClass = cont % 2 != 0 ? "odd" : string.Empty;
            
            <tr class="@rowClass">                                
                <td class="center TH90">@line.ProductId</td>
                <td class="left TH250">@line.ProductName</td>
                <td class="center TH90">@line.InvoiceLineQuantity</td>
                <td class="right TH100">@line.ProductCost €</td>
                @if (line.InvoiceLineDiscount.HasValue){<td class="center">@line.InvoiceLineDiscount %</td>} else { <td class="center">-</td> }
                <td class="right TH100">@line.InvoiceLineTotal €</td>
                <td class="TH52 center">
                    <a href="#" id="btnEdit_@(line.InvoiceLineId)" class="btnView"></a>
                    <a href="#" class="btnDelete deleteLinea" id="delete_@(line.InvoiceLineId)"></a> 
                </td>
            </tr>
            cont++;
            totalsinIVA += (decimal)line.ProductCost;
         }    

         @for (int i = Model.Count; i <= 5; i++)
         {
            rowClass = cont % 2 != 0 ? "odd" : string.Empty;
            <tr class="@rowClass">
                <td class="TH90"></td>
                <td class="TH250"></td>
                <td class="TH90"></td>
                <td class="TH100"></td>
                <td class=""></td>                                
                <td class="TH100"></td>                
                <td class="TH67 center"></td>
            </tr>
            cont++;
        }
    </tbody>
    <tfoot>
        @{
            totalconIVA = totalsinIVA + (totalsinIVA * 18 / 100);   
         }
        <td colspan="7" align="right"><b>Total sin IVA:</b> @totalsinIVA €   /  <b>Total con IVA (18%):</b> @totalconIVA € </td>
    </tfoot>
</table>
</div>
</div>
</div>

<script type="text/javascript">

    jQuery(".deleteLinea").click(function () {
        var DeleteURL = '@Url.Action("DeleteInvoiceLine","Invoice")';
        var lineID = this.id.split('_')[1];
        if (confirm("¿Estas seguro de eliminar esta Linea?")) {
            jQuery("#ContainerInvoiceLines").html("");
            jQuery.ajax({
                url: DeleteURL,
                data: { ID: lineID },
                cache: false,
                success: function (data) {
                    jQuery("#ContainerInvoiceLines").html(data);
                }
            });
        }
    });

    jQuery(".SaveInvoiceLine").click(function (e) {
        e.preventDefault();
        var NewInvoiceLineUrl = '@Url.Action("SaveInvoiceLine","Invoice")';
        var ReloadUrl = '@Url.Action("Editar","Invoice")';
        var Id = jQuery("#InvoiceId").val();
        jQuery.ajax({
            type: "POST",
            url: NewInvoiceLineUrl,
            data: { InvoiceID: Id,
                ProductReference: jQuery("#@InvoiceLineFields.ProductReference").val(),
                ProductName: jQuery("#@InvoiceLineFields.ProductName ").val(),
                ProductCost: jQuery("#@InvoiceLineFields.ProductCost").val(),
                InvoiceLineQuantity: jQuery("#@InvoiceLineFields.InvoiceLineQuantity").val(),
                InvoiceLineDiscount: jQuery("#@InvoiceLineFields.InvoiceLineDiscount").val()
            },
            success: function (event) {
                if (event.result == "success") {
                    window.location = ReloadUrl + "?InvoiceId=" + Id;
                }
                else {
                    jQuery("#ErrorPassword").show();
                    jQuery("#ErrorPassword .validationClose").remove();
                    if (event.validationErrors) {
                        jQuery("#ErrorPassword ul").fromTemplate('templateErrors', event);
                        ShowValidationErrors("#ChangePasswordForm", event.validationErrors, "errorListTemplate");
                    }
                }
                jQuery(".validationClose").click(function (e) {
                    e.preventDefault();
                    jQuery(".validationDiv, .validationDivError").hide("slow");
                });
            },
            dataType: "json",
            cache: false
        });          
    });

    jQuery('.btnView').click(function () {
        var id = this.id.split('_')[1];
        var EditInvoiceLineUrl = '@Url.Action("EditarLinea", "Invoice")';
        jQuery("#DialogLineInvoice").html("");
        jQuery.ajax({
            url: EditInvoiceLineUrl,
            cache:false,
            data: { InvoiceLineId: id },
            success: function (data) {
                jQuery("#DialogLineInvoice").html(data);
                OpenInvoiceLinedialog();
            }
        });
       return false;
    });

    
    function OpenInvoiceLinedialog() {
        var NewInvoiceLineUrl = '@Url.Action("SaveInvoiceLine", "Invoice")';
        var ReloadUrl = '@Url.Action("Editar", "Invoice")';
        
        jQuery("#DialogLineInvoice").dialog({
            autoOpen: true,
            modal: true,
            show: 'fold',
            width: 600,
            position: ['center', 100],
            buttons: { "Cerrar": function () {
                ClearInvoiceLineDialogForm();
                jQuery("#DialogLineInvoice").dialog("close");
            }, "Guardar": function () {
                var Id = jQuery("#InvoiceId").val();
                jQuery.ajax({
                    type: "POST",
                    url: NewInvoiceLineUrl,
                    data: { InvoiceID: Id,
                        ProductReference: jQuery("#@InvoiceLineFields.ProductReference").val(),
                        ProductName: jQuery("#@InvoiceLineFields.ProductName").val(),
                        ProductCost: jQuery("#@InvoiceLineFields.ProductCost").val(),
                        InvoiceLineQuantity: jQuery("#@InvoiceLineFields.InvoiceLineQuantity").val(),
                        InvoiceLineDiscount: jQuery("#@InvoiceLineFields.InvoiceLineDiscount").val()
                    },
                    success: function (event) {
                        if (event.result == "success") {
                            window.location = ReloadUrl + "?InvoiceId=" + Id;
                        }
                        else {
                            jQuery("#ErrorPassword").show();
                            jQuery("#ErrorPassword .validationClose").remove();
                            if (event.validationErrors) {
                                jQuery("#ErrorPassword ul").fromTemplate('templateErrors', event);
                                ShowValidationErrors("#ChangePasswordForm", event.validationErrors, "errorListTemplate");
                            }
                        }
                        jQuery(".validationClose").click(function (e) {
                            e.preventDefault();
                            jQuery(".validationDiv, .validationDivError").hide("slow");
                        });
                    },
                    dataType: "json",
                    cache: false
                });
            }
            },
            close: function () {
                ClearInvoiceLineDialogForm();
                jQuery("#DialogLineInvoice").dialog("close");
            }
        });
    }


    function ClearInvoiceLineDialogForm() {
        jQuery("#@InvoiceLineFields.ProductReference").val("");
        jQuery("#@InvoiceLineFields.ProductName").val("");
        jQuery("#@InvoiceLineFields.ProductCost").val("");
        jQuery("#@InvoiceLineFields.InvoiceLineQuantity").val("");
        jQuery("#@InvoiceLineFields.InvoiceLineDiscount").val("");
    }  
   
</script>


